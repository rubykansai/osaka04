import{V as i,a as n,b as m,c,_ as h,d as r,e as u,g as l,k as f,h as b,i as g,j as k}from"./7WPr_Xps.js";import{_ as y,q as v,w as e,V as x,o as V,b as t,a as s,d as w,t as o}from"./DZ6QuuPH.js";import"./b21tHhdU.js";const C={data:()=>({speaker:{name:"Koichi ITO",twitter:"https://twitter.com/koic",github:"https://github.com/koic",description:"OSS プログラマー。RuboCop のコミッター。株式会社永和システムマネジメント エンジニアリングマネージャー。最近は、RuboCop のバックエンドに関するパーサー技術を趣味にしています。",image:"https://avatars.githubusercontent.com/u/13203?v=4",title:"Minify Ruby Code",abstract:`Ruby のコードを minify する話です。

minify するための構文解析の実装には Prism パーサーを使います。構文解析というと抽象構文木のイメージを持たれがちかもしれませんが、本編ではレキサーを使った手法を紹介します。このトークの中で、minify の実装における注意点や、そこから得られた Ruby の構文の特色についてもお話しします。

JavaScript などではポピュラーな minify を、Ruby のコードで行ったらどうなるかの発表をお楽しみください。`}})},R=s("h1",{class:"text-h2 title mb-15"}," Schedule ",-1),B={align:"left"},S={class:"py-2 px-2"},$={class:"d-flex justify-center"},I=["href"],N=["href"],T={align:"left"},j={class:"text-body-2 mt-5"},A={class:"text-h5 title mb-2"},D={class:"text-body-1 abstract"};function F(a,O,q,H,J,K){const d=b,_=g,p=k;return V(),v(x,{class:"fill-height"},{default:e(()=>[t(d),t(r,null,{default:e(()=>[t(i,{align:"center"},{default:e(()=>[t(n,{"max-width":"70vw","min-width":"70vw",class:"py-10",elevation:0},{default:e(()=>[t(m,null,{default:e(()=>[t(c,{src:h,width:"10vh"}),R,s("div",B,[t(r,null,{default:e(()=>[t(i,{md:"6",sm:"12",xs:"12"},{default:e(()=>[t(n,{class:"speaker px-10 py-5",align:"center",flat:""},{default:e(()=>[s("div",S,[t(c,{src:a.speaker.image,"max-height":"10rem","max-width":"10rem",cover:""},null,8,["src"]),t(u,null,{default:e(()=>[w(o(a.speaker.name),1)]),_:1}),s("div",$,[s("a",{href:a.speaker.twitter},[t(l,{class:"mx-2",icon:"mdi-twitter",flat:""})],8,I),s("a",{href:a.speaker.github},[t(l,{class:"mx-2",icon:"mdi-github",flat:""})],8,N)]),s("div",T,[s("p",j,o(a.speaker.description),1)])])]),_:1})]),_:1}),t(i,null,{default:e(()=>[s("h2",A,o(a.speaker.title),1),t(f,{class:"mb-5"}),s("p",D,o(a.speaker.abstract),1)]),_:1})]),_:1})])]),_:1})]),_:1}),t(_),t(p)]),_:1})]),_:1})]),_:1})}const z=y(C,[["render",F]]);export{z as default};
